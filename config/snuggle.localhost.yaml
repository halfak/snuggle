last_updated: "July 12th, 2013"
author: 
  name: Aaron Halfaker
  email: aaron.halfaker@gmail.com
  url: http://halfaker.info

# This configuration file specifies the behavior of Snuggle
# TODO: Assume the CWD is root?
root_directory: /sites/snuggle.localhost.org

oauth:
  consumer_key: 9d96eb05ffbcb38c3f7b256da3c1c1c9
  consumer_secret: 766629a2a9e3553a5551db70320565e96270732e

# The configuration for the web server.  The web server provides the user 
# interface and API for Snuggle.
web_server:
  host: 0.0.0.0
  port: 80
  beaker:
    session.type: "file"
    session.data_dir: "/tmp/snuggle_sessions"
    session.auto: True
    session.key: "s_id"
    # Replace with randomly generated string. See ./generate_secret
    session.secret: "REGENERATE ME: ogz8AU0/SL66MI.Zhnmr{x|1d,/Y6/J&/1Tib&86%?4`wBoT@"
    # 30 minutes
    session.timeout: 1800

# The configuration for the synchronization server.  The synchronization server
# keeps Snuggle's data up-to-date by listening to a recent_changes feed.
#
# You can comment out a synchronizer to turn it off.  You probably don't want
# to turn off the changes_synchronizer.  It's the base of all new updates
# in the system.
sync_server:
  synchronizers:
    - changes_synchronizer
    - scores_synchronizer


# Configuration for the data model
model:
  module: snuggle.data.models.Mongo
  host: localhost
  port: 27017
  database: snuggle


# The Changes Synchronizer
#
# This synchronizer handles the lion's share of the work of tracking and 
# populating new user data.  It reads from MediaWiki's recentchanges at a 
# pre-defined interval to gather new users, their edits, changes to their talk
# pages and reverts to their edits.  It also builds a work queue for the 
# scores synchronizer. 
changes_synchronizer:
  module: snuggle.sync.synchronizers.Changes
  # Main loop delay in seconds.  How often to attempt an update?
  loop_delay: 5
  # Limit the number of changes per request to this number
  changes_per_request: 500
  # Ignore recent changes that occurred before this id & timestamp
  starting_rcid: 590050025
  starting_timestamp: 1373598551
  # Forget users after 1 month = 60*60*24*30 = 2592000 seconds
  max_age: 2592000

# The Scores Synchronizer
#
# This synchronizer gathers vandal scoring data in order to build a
# "desirability" score for new users.  This is useful for sorting in Snuggle.
scores_synchronizer:
  module: snuggle.sync.synchronizers.Scores
  # Main loop delay in seconds.  How often to make requests for scores?
  loop_delay: 10
  # Only request up to this many scores per loop
  scores_per_request: 100
  # Stop requesting a score if it has been requested at least 'min_attempts'
  # times and it's revision ID is at least 'max_id_distance' lower than a score 
  # that was successfully recorded.
  min_attempts: 5
  max_attempts: 20
  max_id_distance: 1000

# Specifies how changes will be acquired.  The two available options are to read
# directly from the MySQL database behind MediaWiki (snuggle.changes.MySQL) or 
# to read from it's API (snuggle.changes.MWAPI).
changes:
  module: snuggle.changes.MWAPI

#changes:
#  module: snuggle.changes.MySQL
#  host: db1047.eqiad.wmnet
#  user: halfak
#  db: enwiki
#  # Specifies where to read the password from
#  read_default_file: /home/halfak/.my.cnf

# Defines how revision scores will be acquired.  Currently, STiki is the only 
# option since other anti-vandal bots don't provide a set of scores on a 
# per-request basis.
scores:
  module: snuggle.scores.STiki
  api:
    uri: http://armstrong.cis.upenn.edu/stiki_api.php
    headers:
      User-Agent: Snuggle synchronizer (WP:Snuggle)


